{% extends "abbreviations.txt" %}
{% block cc %}
// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
    "name": "{{cookiecutter.__src_folder_name}}",

    // Update the 'dockerComposeFile' list if you have more compose files or use different names.
    // The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
    "dockerComposeFile": "docker-compose_dev.yml",
    // The 'service' property is the name of the service for the container that VS Code should
    // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
    "service": "app",
    "shutdownAction": "stopCompose",
    "workspaceFolder": "/workspace",
    "forwardPorts": [{{cookiecutter.web_port}}, {{db_port}}],
    "portsAttributes": {
        "{{cookiecutter.web_port}}": {"label": "frontend web port", "onAutoForward": "notify"},
        "{{db_port}}": {"label": "{{db_port_label}}", "onAutoForward": "silent"}
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-azuretools.vscode-bicep",
                "charliermarsh.ruff",
                "ms-python.python",
                {% if cookiecutter.project_host == "aca" %}
                "ms-azuretools.vscode-docker",
                {% endif %}
                {% if 'postgres' in cookiecutter.db_resource %}
                "mtxr.sqltools",
                "mtxr.sqltools-driver-pg",
                {% endif %}
                "bierner.github-markdown-preview"
            ],
            "settings": {
                {% if 'postgres' in cookiecutter.db_resource %}
                "sqltools.connections": [
                    {
                        "name": "Local database",
                        "driver": "PostgreSQL",
                        "server": "db",
                        "port": 5432,
                        "database": "relecloud",
                        "username": "postgres",
                        "password": "postgres"
                    }
                ],
                {% endif %}
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "files.exclude": {
                    ".coverage": true,
                    ".pytest_cache": true,
                    "__pycache__": true
                },
                [python]: {
                    "editor.formatOnSave": true,
                    "editor.defaultFormatter": "charliermarsh.ruff",
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": true,
                        "source.fixAll": true
                    }
                }
            }
        }
    },
    "features": {
        {% if cookiecutter.project_host == "aca" %}
        // Required for azd to package the app to ACA
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        {% endif %}
        "ghcr.io/azure/azure-dev/azd:latest": {}
    },
    {% if cookiecutter.project_backend == "django" %}
    "postCreateCommand": "python -m pip install -r requirements-dev.txt && playwright install chromium --with-deps && python src/manage.py migrate && python src/manage.py loaddata src/seed_data.json"
    {% endif %}
    {% if cookiecutter.project_backend == "flask" %}
    {% if 'postgres' in cookiecutter.db_resource %}
    "postCreateCommand": "pip install -r requirements-dev.txt && playwright install chromium --with-deps && pip install -e src && python3 -m flask --app src/flaskapp db upgrade --directory src/flaskapp/migrations && python3 -m flask --app src/flaskapp seed --filename src/seed_data.json"
    {% else %}
    "postCreateCommand": "pip install -r requirements-dev.txt && playwright install chromium --with-deps && pip install -e src && python3 -m flask --app src/flaskapp seed --filename src/seed_data.json --drop"
    {% endif %}
    {% endif %}
    {% if cookiecutter.project_backend == "fastapi" %}
    "postCreateCommand": "pip install -r requirements-dev.txt && pip install -e && src playwright install chromium --with-deps && python3 src/fastapi_app/seed_data.py"
    {% endif %}
}

{% endblock %}
